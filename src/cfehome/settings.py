# """
# Django settings for cfehome project.

# Generated by 'django-admin startproject' using Django 5.1.1.

# For more information on this file, see
# https://docs.djangoproject.com/en/5.1/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.1/ref/settings/
# """

# from pathlib import Path

# from decouple import config  # os.environ.get()


# from decouple import config

# BASE_URL = config("BASE_URL", default="http://127.0.0.1:8000")
# # default backend
# # EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = config("EMAIL_HOST", cast=str, default=None)
# EMAIL_PORT = config("EMAIL_PORT", cast=str, default="587")  # Recommended
# EMAIL_ADDRESS = "hungrypy@gmail.com"
# EMAIL_HOST_USER = config("EMAIL_HOST_USER", cast=str, default=None)
# EMAIL_HOST_PASSWORD = config("EMAIL_HOST_PASSWORD", cast=str, default=None)
# EMAIL_USE_TLS = config(
#     "EMAIL_USE_TLS", cast=bool, default=True
# )  # Use EMAIL_PORT 587 for TLS

# ADMIN_USER_NAME = config("ADMIN_USER_NAME", default="Justin")
# ADMIN_USER_EMAIL = config("ADMIN_USER_EMAIL", default=None)

# MANAGERS = []
# ADMINS = []
# if all([ADMIN_USER_NAME, ADMIN_USER_EMAIL]):
#     ADMINS += [(f"{ADMIN_USER_NAME}", f"{ADMIN_USER_EMAIL}")]
#     MANAGERS = ADMINS

# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
# LOCAL_CDN = BASE_DIR.parent / "local-cdn"
# TEMPLATE_DIR = BASE_DIR / "templates"

# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = "django-insecure-)m9pn5k+cz^l1pos#-_dr@nqcmqtynn1xo9f$b=6uney85a+cl"

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

# ALLOWED_HOSTS = []


# # Application definition

# INSTALLED_APPS = [
#     "django.contrib.admin",
#     "django.contrib.auth",
#     "django.contrib.contenttypes",
#     "django.contrib.sessions",
#     "django.contrib.messages",
#     "django.contrib.staticfiles",
#     # third party
#     "django_htmx",
#     "tailwind",
#     "theme",  # django-tailwind theme app
#     # internal
#     "courses",
#     "emails",
# ]

# TAILWIND_APP_NAME = "theme"  # django-tailwind theme app
# INTERNAL_IPS = [
#     "0.0.0.0",
#     "127.0.0.1",
# ]

# MIDDLEWARE = [
#     "django.middleware.security.SecurityMiddleware",
#     "django.contrib.sessions.middleware.SessionMiddleware",
#     "django.middleware.common.CommonMiddleware",
#     "django.middleware.csrf.CsrfViewMiddleware",
#     "django.contrib.auth.middleware.AuthenticationMiddleware",
#     "django.contrib.messages.middleware.MessageMiddleware",
#     "django.middleware.clickjacking.XFrameOptionsMiddleware",
#     "django_htmx.middleware.HtmxMiddleware",
# ]

# if DEBUG:
#     # django-tailwind theme app
#     INSTALLED_APPS.append("django_browser_reload")
#     MIDDLEWARE.append("django_browser_reload.middleware.BrowserReloadMiddleware")

# ROOT_URLCONF = "cfehome.urls"

# TEMPLATES = [
#     {
#         "BACKEND": "django.template.backends.django.DjangoTemplates",
#         "DIRS": [
#             TEMPLATE_DIR,
#         ],
#         "APP_DIRS": True,
#         "OPTIONS": {
#             "context_processors": [
#                 "django.template.context_processors.debug",
#                 "django.template.context_processors.request",
#                 "django.contrib.auth.context_processors.auth",
#                 "django.contrib.messages.context_processors.messages",
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = "cfehome.wsgi.application"


# # Database
# # https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": BASE_DIR / "db.sqlite3",
#     }
# }


# # Password validation
# # https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
#     },
#     {
#         "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
#     },
#     {
#         "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
#     },
#     {
#         "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/5.1/topics/i18n/

# LANGUAGE_CODE = "en-us"

# TIME_ZONE = "UTC"

# USE_I18N = True

# USE_TZ = True


# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/5.1/howto/static-files/

# # whitenoise/nginx
# STATIC_URL = "static/"

# # nginx
# MEDIA_URL = "media/"
# MEDIA_ROOT = LOCAL_CDN / "media"

# # Default primary key field type
# # https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# # cloudinary video config
# CLOUDINARY_CLOUD_NAME = config("CLOUDINARY_CLOUD_NAME", default="")
# CLOUDINARY_PUBLIC_API_KEY = config("CLOUDINARY_PUBLIC_API_KEY", default="")
# CLOUDINARY_SECRET_API_KEY = config("CLOUDINARY_SECRET_API_KEY")

# import os, dj_database_url

# DEBUG = False

# ALLOWED_HOSTS = [os.getenv("RENDER_EXTERNAL_HOSTNAME", "127.0.0.1")]

# DATABASES = {
#     "default": dj_database_url.config(
#         default=os.getenv("DATABASE_URL"), conn_max_age=600, ssl_require=True
#     )
# }

# STATIC_URL = "/static/"
# STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
# STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# MIDDLEWARE.insert(1, "whitenoise.middleware.WhiteNoiseMiddleware")

"""
Django settings for cfehome project.
Compatible with Django 5.x and Render.com
"""

from pathlib import Path
import os
from decouple import config  # pip install python-decouple
import dj_database_url  # pip install dj-database-url

# ------------------------------------------------------------------------------
# Paths
# ------------------------------------------------------------------------------
BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATE_DIR = BASE_DIR / "templates"
LOCAL_CDN = BASE_DIR.parent / "local-cdn"  # still used for media

# ------------------------------------------------------------------------------
# Core settings
# ------------------------------------------------------------------------------
SECRET_KEY = config("SECRET_KEY", default="change-me")  # Render injects one
DEBUG = config("DEBUG", cast=bool, default=True)

ALLOWED_HOSTS = []
external_host = os.getenv("RENDER_EXTERNAL_HOSTNAME")
if external_host:
    ALLOWED_HOSTS.append(external_host)

# ------------------------------------------------------------------------------
# Applications
# ------------------------------------------------------------------------------
INSTALLED_APPS = [
    # Django
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Third-party
    "django_htmx",
    "tailwind",
    "theme",  # django-tailwind theme app
]

# Add live-reload during local DEBUG
if DEBUG:
    INSTALLED_APPS += ["django_browser_reload"]

INTERNAL_IPS = ["127.0.0.1", "0.0.0.0"]

# ------------------------------------------------------------------------------
# Middleware
# ------------------------------------------------------------------------------
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",  # <-- WhiteNoise
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django_htmx.middleware.HtmxMiddleware",
]

if DEBUG:
    MIDDLEWARE += ["django_browser_reload.middleware.BrowserReloadMiddleware"]

# ------------------------------------------------------------------------------
# URLs / WSGI
# ------------------------------------------------------------------------------
ROOT_URLCONF = "cfehome.urls"
WSGI_APPLICATION = "cfehome.wsgi.application"

# ------------------------------------------------------------------------------
# Templates
# ------------------------------------------------------------------------------
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [TEMPLATE_DIR],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# ------------------------------------------------------------------------------
# Database
# ------------------------------------------------------------------------------
if DEBUG and not os.getenv("DATABASE_URL"):
    # Local SQLite
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }
else:
    # Render PostgreSQL
    DATABASES = {
        "default": dj_database_url.config(
            default=os.getenv("DATABASE_URL"),
            conn_max_age=600,
            ssl_require=True,
        )
    }

# ------------------------------------------------------------------------------
# Password validation
# ------------------------------------------------------------------------------
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# ------------------------------------------------------------------------------
# Internationalization
# ------------------------------------------------------------------------------
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# ------------------------------------------------------------------------------
# Static & Media
# ------------------------------------------------------------------------------
STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

MEDIA_URL = "/media/"
MEDIA_ROOT = LOCAL_CDN / "media"

# ------------------------------------------------------------------------------
# Email (optional: set in Render > Environment)
# ------------------------------------------------------------------------------
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = config("EMAIL_HOST", default="")
EMAIL_PORT = config("EMAIL_PORT", cast=int, default=587)
EMAIL_HOST_USER = config("EMAIL_HOST_USER", default="")
EMAIL_HOST_PASSWORD = config("EMAIL_HOST_PASSWORD", default="")
EMAIL_USE_TLS = config("EMAIL_USE_TLS", cast=bool, default=True)

# ------------------------------------------------------------------------------
# Cloudinary (optional)
# ------------------------------------------------------------------------------
CLOUDINARY_CLOUD_NAME = config("CLOUDINARY_CLOUD_NAME", default="")
CLOUDINARY_PUBLIC_API_KEY = config("CLOUDINARY_PUBLIC_API_KEY", default="")
CLOUDINARY_SECRET_API_KEY = config("CLOUDINARY_SECRET_API_KEY", default="")

# ------------------------------------------------------------------------------
# Tailwind
# ------------------------------------------------------------------------------
TAILWIND_APP_NAME = "theme"
